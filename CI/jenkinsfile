pipeline {
    agent any

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                script {
                    withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vault-token', vaultUrl: 'http://13.56.188.51:8200'], vaultSecrets: [
                          [path: 'secrets/github', secretValues: [[envVar: 'GITHUB_USER', vaultKey: 'user'], [envVar: 'GITHUB_TOKEN', vaultKey: 'github_token']]]
                    ]) {
                        echo "Cloning the GITHUB Repository"
                        sh """
                        git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/RajDevO/jenkins-tf-eks.git
                        """
                    }
                }
            }
        }

        stage('Build JAR') {
            steps {
                dir("${WORKSPACE}/jenkins-tf-eks/CI") {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Docker Build & Push Image') {
            steps {
                script {
                    withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vault-token', vaultUrl: 'http://13.56.188.51:8200'], vaultSecrets: [
                          [path: 'secrets/dockerhub', secretValues: [[envVar: 'DOCKER_USERNAME', vaultKey: 'username'], [envVar: 'DOCKER_PASSWORD', vaultKey: 'password']]]
                    ]) {
                        sh """
                        mv ${WORKSPACE}/jenkins-tf-eks/CI/target/hello-world-app.jar ${WORKSPACE}/jenkins-tf-eks/CI
                        sudo chown jenkins:docker hello-world-app.jar
                        cd ${WORKSPACE}/jenkins-tf-eks/CI/
                        ls -la
                        docker build -f ${WORKSPACE}/jenkins-tf-eks/CI/Dockerfile -t ${DOCKER_USERNAME}/v55-app:latest .
                        echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
                        docker push ${DOCKER_USERNAME}/v55-app:latest
                        """
                    }
                }
            }
        }
    }
}
