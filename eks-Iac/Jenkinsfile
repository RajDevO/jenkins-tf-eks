pipeline {
    agent any

    parameters {
        string(name: 'EKS_CLUSTER_NAME', defaultValue: '', description: 'Enter the name of the EKS cluster')
    }
    environment {
        AWS_ACCESS_KEY_ID = ''
        AWS_SECRET_ACCESS_KEY = ''
    }
    
    stages {
        stage('Setup AWS Credentials from Vault') {
            steps {
                script {
                    withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vault-token', vaultUrl: 'http://13.56.188.51:8200'], vaultSecrets: [
                          [path: 'aws/credentials', secretValues: [[envVar: 'AWS_ACCESS_KEY_ID', vaultKey: 'access_key'], [envVar: 'AWS_SECRET_ACCESS_KEY', vaultKey: 'secret_key']]]
                    ]){
                        echo "AWS ENV SET"
                        sh 'aws sts get-caller-identity'
                    }
                }
            }
        }
        
        stage('Git Checkout') {
            steps {
                script {
                    withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vault-token', vaultUrl: 'http://13.56.188.51:8200'], vaultSecrets: [
                          [path: 'secrets/github', secretValues: [[envVar: 'GITHUB_USER', vaultKey: 'user'], [envVar: 'GITHUB_TOKEN', vaultKey: 'github_token']]]
                    ]) {
                        echo "Cloning the GitHub Repository"
                        sh """
                        git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/RajDevO/jenkins-tf-eks.git
                        aws aws sts get-caller-identity
                        """
                    }
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    dir("${WORKSPACE}/jenkins-tf-eks/eks-Iac") {
                        sh 'aws sts get-caller-identity'
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    dir("${WORKSPACE}/jenkins-tf-eks/eks-Iac") {
                        sh "terraform plan -var cluster_name=${params.EKS_CLUSTER_NAME}"
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    dir("${WORKSPACE}/jenkins-tf-eks/eks-Iac") {
                        sh "terraform apply -auto-approve -var cluster_name=${params.EKS_CLUSTER_NAME}"
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    dir("${WORKSPACE}/jenkins-tf-eks/eks-Iac") {
                        sh 'terraform state list'
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up the working directory after execution (Optional)
            cleanWs()
        }
    }
}
